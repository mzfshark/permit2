{
	"id": "c0ec5f263bd538885231e03f23491896",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport {IEIP712} from \"https://raw.githubusercontent.com/Uniswap/permit2/main/src/interfaces/IEIP712.sol\";\r\n\r\n/// @notice EIP712 helpers for permit2\r\n/// @dev Maintains cross-chain replay protection in the event of a fork\r\n/// @dev Reference: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/EIP712.sol\r\ncontract EIP712 is IEIP712 {\r\n    // Cache the domain separator as an immutable value, but also store the chain id that it\r\n    // corresponds to, in order to invalidate the cached domain separator if the chain id changes.\r\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\r\n    uint256 private immutable _CACHED_CHAIN_ID;\r\n\r\n    bytes32 private constant _HASHED_NAME = keccak256(\"Permit2\");\r\n    bytes32 private constant _TYPE_HASH =\r\n        keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\r\n\r\n    constructor() {\r\n        _CACHED_CHAIN_ID = block.chainid;\r\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME);\r\n    }\r\n\r\n    /// @notice Returns the domain separator for the current chain.\r\n    /// @dev Uses cached version if chainid and address are unchanged from construction.\r\n    function DOMAIN_SEPARATOR() public view override returns (bytes32) {\r\n        return block.chainid == _CACHED_CHAIN_ID\r\n            ? _CACHED_DOMAIN_SEPARATOR\r\n            : _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME);\r\n    }\r\n\r\n    /// @notice Builds a domain separator using the current chainId and contract address.\r\n    function _buildDomainSeparator(bytes32 typeHash, bytes32 nameHash) private view returns (bytes32) {\r\n        return keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this)));\r\n    }\r\n\r\n    /// @notice Creates an EIP-712 typed data hash\r\n    function _hashTypedData(bytes32 dataHash) internal view returns (bytes32) {\r\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", DOMAIN_SEPARATOR(), dataHash));\r\n    }\r\n}\r\n"
			},
			"https://raw.githubusercontent.com/Uniswap/permit2/main/src/interfaces/IEIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface IEIP712 {\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 500
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"https://raw.githubusercontent.com/Uniswap/permit2/main/src/interfaces/IEIP712.sol": {
				"IEIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/Uniswap/permit2/main/src/interfaces/IEIP712.sol\":\"IEIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/Uniswap/permit2/main/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5\",\"dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Maintains cross-chain replay protection in the event of a forkReference: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/EIP712.sol",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Uses cached version if chainid and address are unchanged from construction."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/EIP712.sol\":412:2023  contract EIP712 is IEIP712 {... */\n  mstore(0x40, 0xc0)\n    /* \"src/EIP712.sol\":951:1101  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/EIP712.sol\":995:1008  block.chainid */\n  chainid\n    /* \"src/EIP712.sol\":976:1008  _CACHED_CHAIN_ID = block.chainid */\n  0xa0\n  dup2\n  dup2\n  mstore\n    /* \"src/EIP712.sol\":1722:1782  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n  0x40\n  dup1\n  mload\n    /* \"src/EIP712.sol\":862:942  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n  0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n    /* \"src/EIP712.sol\":1722:1782  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n  0x20\n  dup1\n  dup4\n  add\n    /* \"#utility.yul\":245:270   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"src/EIP712.sol\":788:808  keccak256(\"Permit2\") */\n  0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a\n    /* \"#utility.yul\":286:304   */\n  dup3\n  dup5\n  add\n    /* \"#utility.yul\":279:313   */\n  mstore\n    /* \"#utility.yul\":329:347   */\n  0x60\n  dup3\n  add\n    /* \"#utility.yul\":322:356   */\n  swap5\n  swap1\n  swap5\n  mstore\n    /* \"src/EIP712.sol\":1776:1780  this */\n  address\n    /* \"#utility.yul\":372:390   */\n  0x80\n  dup1\n  dup4\n  add\n    /* \"#utility.yul\":365:425   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"src/EIP712.sol\":1722:1782  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n  dup3\n  mload\n  dup1\n  dup4\n  sub\n  swap1\n  swap2\n  add\n  dup2\n  mstore\n    /* \"#utility.yul\":217:236   */\n  swap3\n  add\n    /* \"src/EIP712.sol\":1722:1782  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n  swap1\n  mstore\n    /* \"src/EIP712.sol\":1712:1783  keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this))) */\n  dup1\n  mload\n  swap2\n  add\n  keccak256\n    /* \"src/EIP712.sol\":1019:1093  _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME) */\n  0x80\n  mstore\n    /* \"src/EIP712.sol\":412:2023  contract EIP712 is IEIP712 {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n  0x00\n  assignImmutable(\"0x277ab82e5a4641341820a4a2933a62c1de997e42e92548657ae21b3728d580fe\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/EIP712.sol\":412:2023  contract EIP712 is IEIP712 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3644e515\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/EIP712.sol\":1268:1497  function DOMAIN_SEPARATOR() public view override returns (bytes32) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"src/EIP712.sol\":1268:1497  function DOMAIN_SEPARATOR() public view override returns (bytes32) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"src/EIP712.sol\":1326:1333  bytes32 */\n      0x00\n        /* \"src/EIP712.sol\":1370:1386  _CACHED_CHAIN_ID */\n      immutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n        /* \"src/EIP712.sol\":1353:1366  block.chainid */\n      chainid\n        /* \"src/EIP712.sol\":1353:1386  block.chainid == _CACHED_CHAIN_ID */\n      eq\n        /* \"src/EIP712.sol\":1353:1489  block.chainid == _CACHED_CHAIN_ID... */\n      tag_9\n      jumpi\n      pop\n        /* \"src/EIP712.sol\":1722:1782  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n      0x40\n      dup1\n      mload\n        /* \"src/EIP712.sol\":862:942  keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\") */\n      0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866\n        /* \"src/EIP712.sol\":1722:1782  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n      0x20\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":427:452   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"src/EIP712.sol\":788:808  keccak256(\"Permit2\") */\n      0x9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a\n        /* \"#utility.yul\":468:486   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":461:495   */\n      mstore\n        /* \"src/EIP712.sol\":1753:1766  block.chainid */\n      chainid\n        /* \"#utility.yul\":511:529   */\n      0x60\n      dup4\n      add\n        /* \"#utility.yul\":504:538   */\n      mstore\n        /* \"src/EIP712.sol\":1776:1780  this */\n      address\n        /* \"#utility.yul\":554:572   */\n      0x80\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":547:630   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"src/EIP712.sol\":1722:1782  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":399:418   */\n      0xa0\n      swap1\n      swap3\n      add\n        /* \"src/EIP712.sol\":1722:1782  abi.encode(typeHash, nameHash, block.chainid, address(this)) */\n      swap1\n      swap3\n      mstore\n        /* \"src/EIP712.sol\":1712:1783  keccak256(abi.encode(typeHash, nameHash, block.chainid, address(this))) */\n      dup1\n      mload\n      swap2\n      add\n      keccak256\n      swap1\n        /* \"src/EIP712.sol\":1268:1497  function DOMAIN_SEPARATOR() public view override returns (bytes32) {... */\n      jump\t// out\n        /* \"src/EIP712.sol\":1353:1489  block.chainid == _CACHED_CHAIN_ID... */\n    tag_9:\n      pop\n        /* \"src/EIP712.sol\":1402:1426  _CACHED_DOMAIN_SEPARATOR */\n      immutable(\"0x277ab82e5a4641341820a4a2933a62c1de997e42e92548657ae21b3728d580fe\")\n      swap1\n        /* \"src/EIP712.sol\":1268:1497  function DOMAIN_SEPARATOR() public view override returns (bytes32) {... */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f3be9c5d0c7a8cc3d783ebafc456f11f0083a739e3cc452b2b1e1c6a1546475a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_88": {
									"entryPoint": null,
									"id": 88,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:433:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "199:232:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "209:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "221:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "232:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "217:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "217:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "209:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "252:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "263:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "245:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "245:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "245:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "290:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "301:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "286:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "286:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "306:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "279:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "279:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "333:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "344:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "329:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "329:18:2"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "349:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "322:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "322:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "322:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "376:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "387:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "372:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "372:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "396:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "412:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "417:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "408:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "408:11:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "421:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "404:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "404:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "392:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "392:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "365:60:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "365:60:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "144:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "155:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "163:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "171:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "179:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "190:4:2",
														"type": ""
													}
												],
												"src": "14:417:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561001057600080fd5b504660a0818152604080517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8666020808301919091527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a828401526060820194909452306080808301919091528251808303909101815292019052805191012060805260805160a05161014c6100b56000396000604e0152600060f4015261014c6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633644e51514610030575b600080fd5b61003861004a565b60405190815260200160405180910390f35b60007f000000000000000000000000000000000000000000000000000000000000000046146100f15750604080517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8666020808301919091527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a82840152466060830152306080808401919091528351808403909101815260a0909201909252805191012090565b507f00000000000000000000000000000000000000000000000000000000000000009056fea2646970667358221220f3be9c5d0c7a8cc3d783ebafc456f11f0083a739e3cc452b2b1e1c6a1546475a64736f6c63430008120033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS PUSH1 0x80 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x14C PUSH2 0xB5 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0x4E ADD MSTORE PUSH1 0x0 PUSH1 0xF4 ADD MSTORE PUSH2 0x14C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0xF1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A DUP3 DUP5 ADD MSTORE CHAINID PUSH1 0x60 DUP4 ADD MSTORE ADDRESS PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xBE SWAP13 0x5D 0xC PUSH27 0x8CC3D783EBAFC456F11F0083A739E3CC452B2B1E1C6A1546475A64 PUSH20 0x6F6C634300081200330000000000000000000000 ",
							"sourceMap": "412:1611:1:-:0;;;951:150;;;;;;;;;-1:-1:-1;995:13:1;976:32;;;;1722:60;;;862:80;1722:60;;;;245:25:2;;;;788:20:1;286:18:2;;;279:34;329:18;;;322:34;;;;1776:4:1;372:18:2;;;;365:60;;;;1722::1;;;;;;;;;;217:19:2;;1722:60:1;;1712:71;;;;;1019:74;;412:1611;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_63": {
									"entryPoint": 74,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_buildDomainSeparator_88": {
									"entryPoint": null,
									"id": 88,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:638:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:2",
														"type": ""
													}
												],
												"src": "14:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "381:255:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "391:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "403:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "414:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "391:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "434:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "445:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "427:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "427:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "427:25:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "472:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "483:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "468:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "468:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "488:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "461:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "461:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "461:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "515:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "526:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "511:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "511:18:2"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "531:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "504:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "504:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "504:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "558:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "569:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "554:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "554:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "578:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "586:42:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "574:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:55:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "547:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "547:83:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "547:83:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "326:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "337:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "345:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "353:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "361:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "372:4:2",
														"type": ""
													}
												],
												"src": "196:440:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"16": [
									{
										"length": 32,
										"start": 244
									}
								],
								"18": [
									{
										"length": 32,
										"start": 78
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80633644e51514610030575b600080fd5b61003861004a565b60405190815260200160405180910390f35b60007f000000000000000000000000000000000000000000000000000000000000000046146100f15750604080517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8666020808301919091527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a82840152466060830152306080808401919091528351808403909101815260a0909201909252805191012090565b507f00000000000000000000000000000000000000000000000000000000000000009056fea2646970667358221220f3be9c5d0c7a8cc3d783ebafc456f11f0083a739e3cc452b2b1e1c6a1546475a64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 CHAINID EQ PUSH2 0xF1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A DUP3 DUP5 ADD MSTORE CHAINID PUSH1 0x60 DUP4 ADD MSTORE ADDRESS PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xBE SWAP13 0x5D 0xC PUSH27 0x8CC3D783EBAFC456F11F0083A739E3CC452B2B1E1C6A1546475A64 PUSH20 0x6F6C634300081200330000000000000000000000 ",
							"sourceMap": "412:1611:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1268:229;;;:::i;:::-;;;160:25:2;;;148:2;133:18;1268:229:1;;;;;;;;1326:7;1370:16;1353:13;:33;:136;;-1:-1:-1;1722:60:1;;;862:80;1722:60;;;;427:25:2;;;;788:20:1;468:18:2;;;461:34;1753:13:1;511:18:2;;;504:34;1776:4:1;554:18:2;;;;547:83;;;;1722:60:1;;;;;;;;;;399:19:2;;;;1722:60:1;;;1712:71;;;;;;1268:229::o;1353:136::-;-1:-1:-1;1402:24:1;;1268:229::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "66400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite"
							},
							"internal": {
								"_buildDomainSeparator(bytes32,bytes32)": "infinite",
								"_hashTypedData(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 412,
									"end": 2023,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 412,
									"end": 2023,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 412,
									"end": 2023,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 951,
									"end": 1101,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 951,
									"end": 1101,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 951,
									"end": 1101,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 951,
									"end": 1101,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 951,
									"end": 1101,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 951,
									"end": 1101,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 1101,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 951,
									"end": 1101,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 951,
									"end": 1101,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 951,
									"end": 1101,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "CHAINID",
									"source": 1
								},
								{
									"begin": 976,
									"end": 1008,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 976,
									"end": 1008,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 976,
									"end": 1008,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 976,
									"end": 1008,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 862,
									"end": 942,
									"name": "PUSH",
									"source": 1,
									"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 245,
									"end": 270,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 245,
									"end": 270,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 245,
									"end": 270,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 245,
									"end": 270,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 788,
									"end": 808,
									"name": "PUSH",
									"source": 1,
									"value": "9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A"
								},
								{
									"begin": 286,
									"end": 304,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 286,
									"end": 304,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 286,
									"end": 304,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 279,
									"end": 313,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 329,
									"end": 347,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 329,
									"end": 347,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 329,
									"end": 347,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 322,
									"end": 356,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 322,
									"end": 356,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 322,
									"end": 356,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 322,
									"end": 356,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1776,
									"end": 1780,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 372,
									"end": 390,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 372,
									"end": 390,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 372,
									"end": 390,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 372,
									"end": 390,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 365,
									"end": 425,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 365,
									"end": 425,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 365,
									"end": 425,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 365,
									"end": 425,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 217,
									"end": 236,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 217,
									"end": 236,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1783,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1783,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1783,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1783,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1019,
									"end": 1093,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1019,
									"end": 1093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 412,
									"end": 2023,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 412,
									"end": 2023,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 2023,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 412,
									"end": 2023,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 2023,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 2023,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 2023,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 2023,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 412,
									"end": 2023,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 2023,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 412,
									"end": 2023,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 2023,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 412,
									"end": 2023,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 2023,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 2023,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f3be9c5d0c7a8cc3d783ebafc456f11f0083a739e3cc452b2b1e1c6a1546475a64736f6c63430008120033",
									".code": [
										{
											"begin": 412,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "3644E515"
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 412,
											"end": 2023,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1497,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1268,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1268,
											"end": 1497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1497,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1497,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1497,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1497,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1268,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1386,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "CHAINID",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1386,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1353,
											"end": 1489,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 427,
											"end": 452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 427,
											"end": 452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 427,
											"end": 452,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 427,
											"end": 452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 788,
											"end": 808,
											"name": "PUSH",
											"source": 1,
											"value": "9AC997416E8FF9D2FF6BEBEB7149F65CDAE5E32E2B90440B566BB3044041D36A"
										},
										{
											"begin": 468,
											"end": 486,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 468,
											"end": 486,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 468,
											"end": 486,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 461,
											"end": 495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1766,
											"name": "CHAINID",
											"source": 1
										},
										{
											"begin": 511,
											"end": 529,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 511,
											"end": 529,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 511,
											"end": 529,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 504,
											"end": 538,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1780,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 554,
											"end": 572,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 554,
											"end": 572,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 554,
											"end": 572,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 554,
											"end": 572,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 547,
											"end": 630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 547,
											"end": 630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 547,
											"end": 630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 547,
											"end": 630,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 399,
											"end": 418,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 399,
											"end": 418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 399,
											"end": 418,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 399,
											"end": 418,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1783,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1783,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1489,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1353,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"https://raw.githubusercontent.com/Uniswap/permit2/main/src/interfaces/IEIP712.sol",
								"src/EIP712.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Maintains cross-chain replay protection in the event of a forkReference: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/EIP712.sol\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Uses cached version if chainid and address are unchanged from construction.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"Returns the domain separator for the current chain.\"}},\"notice\":\"EIP712 helpers for permit2\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/Uniswap/permit2/main/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xea70db68ce450ad38dfbd490058595441144808eb95272ae9b89e3fbe6456954\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fad9ff319665acdc2f1295bb82db3e5b4d52babc0b58f147dbdbb9f322c6e5\",\"dweb:/ipfs/QmTbYJPcux8eJ3qGVYQh6TiwCA2FPu6HXTUg6QFTnX91Ks\"]},\"src/EIP712.sol\":{\"keccak256\":\"0x4ffc3de9f8bd4077b9690360c3f28e34308f516aea1d1091d6a796a14ca0d526\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddf08f98f344ed27e88a10f8ba07b66e09567094af74a141abc6c8057024fab3\",\"dweb:/ipfs/QmPvGvdwTGP4YBQrSjWoQegrzPfeLN9KzpQ8GV3zGGJ5Ty\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "Returns the domain separator for the current chain."
							}
						},
						"notice": "EIP712 helpers for permit2",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"https://raw.githubusercontent.com/Uniswap/permit2/main/src/interfaces/IEIP712.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/Uniswap/permit2/main/src/interfaces/IEIP712.sol",
					"exportedSymbols": {
						"IEIP712": [
							7
						]
					},
					"id": 8,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IEIP712",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 7,
							"linearizedBaseContracts": [
								7
							],
							"name": "IEIP712",
							"nameLocation": "68:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3644e515",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "91:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "107:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "133:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "132:9:0"
									},
									"scope": 7,
									"src": "82:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 8,
							"src": "58:86:0",
							"usedErrors": []
						}
					],
					"src": "32:113:0"
				},
				"id": 0
			},
			"src/EIP712.sol": {
				"ast": {
					"absolutePath": "src/EIP712.sol",
					"exportedSymbols": {
						"EIP712": [
							108
						],
						"IEIP712": [
							7
						]
					},
					"id": 109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 9,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/Uniswap/permit2/main/src/interfaces/IEIP712.sol",
							"file": "https://raw.githubusercontent.com/Uniswap/permit2/main/src/interfaces/IEIP712.sol",
							"id": 11,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 109,
							"sourceUnit": 8,
							"src": "61:106:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 10,
										"name": "IEIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 7,
										"src": "69:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 13,
										"name": "IEIP712",
										"nameLocations": [
											"431:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 7,
										"src": "431:7:1"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "431:7:1"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 12,
								"nodeType": "StructuredDocumentation",
								"src": "171:241:1",
								"text": "@notice EIP712 helpers for permit2\n @dev Maintains cross-chain replay protection in the event of a fork\n @dev Reference: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/EIP712.sol"
							},
							"fullyImplemented": true,
							"id": 108,
							"linearizedBaseContracts": [
								108,
								7
							],
							"name": "EIP712",
							"nameLocation": "421:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 16,
									"mutability": "immutable",
									"name": "_CACHED_DOMAIN_SEPARATOR",
									"nameLocation": "666:24:1",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "640:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "640:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "immutable",
									"name": "_CACHED_CHAIN_ID",
									"nameLocation": "723:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "697:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 17,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 23,
									"mutability": "constant",
									"name": "_HASHED_NAME",
									"nameLocation": "773:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "748:60:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 19,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "748:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d697432",
												"id": 21,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "798:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a",
													"typeString": "literal_string \"Permit2\""
												},
												"value": "Permit2"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a",
													"typeString": "literal_string \"Permit2\""
												}
											],
											"id": 20,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "788:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "788:20:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 28,
									"mutability": "constant",
									"name": "_TYPE_HASH",
									"nameLocation": "840:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "815:127:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 24,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "815:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 26,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "872:69:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
													"typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 25,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "862:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 27,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "862:80:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "965:136:1",
										"statements": [
											{
												"expression": {
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 31,
														"name": "_CACHED_CHAIN_ID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "976:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 32,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "995:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1001:7:1",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "995:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "976:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "976:32:1"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 36,
														"name": "_CACHED_DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1019:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 38,
																"name": "_TYPE_HASH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1068:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 39,
																"name": "_HASHED_NAME",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "1080:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 37,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1046:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																"typeString": "function (bytes32,bytes32) view returns (bytes32)"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1046:47:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1019:74:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1019:74:1"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "962:2:1"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "965:0:1"
									},
									"scope": 108,
									"src": "951:150:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										6
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "1335:162:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 51,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1353:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1359:7:1",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "1353:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 53,
															"name": "_CACHED_CHAIN_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1370:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1353:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "_TYPE_HASH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1464:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 58,
																"name": "_HASHED_NAME",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "1476:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 56,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1442:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																"typeString": "function (bytes32,bytes32) view returns (bytes32)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1442:47:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1353:136:1",
													"trueExpression": {
														"id": 55,
														"name": "_CACHED_DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1402:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 50,
												"id": 61,
												"nodeType": "Return",
												"src": "1346:143:1"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1109:153:1",
										"text": "@notice Returns the domain separator for the current chain.\n @dev Uses cached version if chainid and address are unchanged from construction."
									},
									"functionSelector": "3644e515",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "1277:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1308:8:1"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1293:2:1"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1326:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1325:9:1"
									},
									"scope": 108,
									"src": "1268:229:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "1694:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 76,
																	"name": "typeHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "1733:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 77,
																	"name": "nameHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 68,
																	"src": "1743:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 78,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1753:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1759:7:1",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "1753:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 82,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1776:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$108",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$108",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1768:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 80,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1768:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1768:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 74,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1722:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1726:6:1",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "1722:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1722:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 73,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1712:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1712:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 72,
												"id": 86,
												"nodeType": "Return",
												"src": "1705:78:1"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "1505:85:1",
										"text": "@notice Builds a domain separator using the current chainId and contract address."
									},
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "1605:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "typeHash",
												"nameLocation": "1635:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1627:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "nameHash",
												"nameLocation": "1653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 67,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1645:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1626:36:1"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1685:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 70,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1684:9:1"
									},
									"scope": 108,
									"src": "1596:195:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1925:95:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 99,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1970:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 100,
																		"name": "DOMAIN_SEPARATOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 63,
																		"src": "1982:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																			"typeString": "function () view returns (bytes32)"
																		}
																	},
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1982:18:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 102,
																	"name": "dataHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "2002:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 97,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1953:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1957:12:1",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1953:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1953:58:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 96,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1943:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 95,
												"id": 105,
												"nodeType": "Return",
												"src": "1936:76:1"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "1799:46:1",
										"text": "@notice Creates an EIP-712 typed data hash"
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedData",
									"nameLocation": "1860:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "dataHash",
												"nameLocation": "1883:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1875:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 90,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1874:18:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1916:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 93,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1915:9:1"
									},
									"scope": 108,
									"src": "1851:169:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 109,
							"src": "412:1611:1",
							"usedErrors": []
						}
					],
					"src": "33:1992:1"
				},
				"id": 1
			}
		}
	}
}